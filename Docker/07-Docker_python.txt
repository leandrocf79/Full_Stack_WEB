
Criar uma pasta chamada build-dev
Nela criar:
index.html

Por o conteúdo para teste para acessar conteúdo.html criado no dentro de Dockerfile:

### Em index.html:

<p>Hello from python !!!  ;) </p>


############## Criar outro arquivo chamado run.py será o SERVIDOR

import logging
import http.server
import socketserver
import getpass

class MyHTTPHandler(http.server.SimpleHTTPRequestHandler):
    def log_message(self, format, *args):
        logging.info("%s - - [%s] %s\n"% (
            self.client_address[0],
            self.log_date_time_string(),
            format%args
        ))

logging.basicConfig(
    filename='/log/http-server.log',
    format='%(asctime)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logging.getLogger().addHandler(logging.StreamHandler())
logging.info('inicializando...')
PORT = 8000

httpd = socketserver.TCPServer(("", PORT), MyHTTPHandler)
logging.info('escutando a porta: %s', PORT)
logging.info('usuário: %s', getpass.getuser())
httpd.serve_forever()


###############




### No Dockerfile usar exatamente assim, mesmo para windows:

FROM python:3.6
LABEL maintainer 'Aluno Cod3r <aluno at cod3r.com.br>'

RUN useradd www && \
    mkdir /app && \
    mkdir /log && \
    chown www /log

USER www
VOLUME /log
WORKDIR /app
EXPOSE 8000

ENTRYPOINT ["/usr/local/bin/python"]
CMD ["run.py"]



##############



No terminal acessar a pasta criada build-dev:
cd ..
cd build-dev
ou
cd Desktop\curso-docker-leandro\build-dev

( incluir o espaço-ponto ):
docker image build -t ex-build-dev .

# docker container run -it -v $(pwd):/app -p 80:8000 --name python-server ex-build-dev

docker container run -it -v C:\Users\Lcf\Desktop\curso-docker-leandro\build-dev:/app -p 80:8000 --name python-server ex-build-dev

Agora, vai observar no terminal as mensagens escritas no run.py

No navegador:
http://localhost/


Acessar de outro local:
docker container run -it --volumes-from=python-server debian cat /log/http-server.log

/log/http-server.log Foi criado no run.py