Renderização condicional se baseia em verificar status

Muito util para exibir coisas expecíficas quando o usuário está logado ou não.

-----------------------Tem esse modo, mais a frente um outro melhor:


import React, {Component} from "react";


class App extends Component {
  constructor(props){
    super(props);
    this.state = {

      status : 1

    };
  }


  render(){
    return(
      <div>

        { this.state.status === 1 && 
        <div><h2>Bem vindo ao sistema!  status === 1</h2>
        <p>Mude o status para qualquer outro número e atualize a pg.</p></div> }

        <h5>React Js - Essa parte será exibida independentemente do status</h5>
        
      </div>

    );
  }
}


export default App;



---------------------------Outra forma:




import React, {Component} from "react";

//true para Logado no sistema. Será comparado com operador ternário

class App extends Component {
  constructor(props){
    super(props);
    this.state = {

      status : false

    };
    this.entrar = this.entrar.bind(this);
    this.sair = this.sair.bind(this);

  }

  entrar(){
      this.setState({status: true})
    }


  sair(){
    this.setState({status: false})
   }



  render(){
    return(
      <div>

        { this.state.status ?  
        <div> 
            <h2>Bem vindo ao sistema!  (status true)</h2> 
            <button onClick={this.sair}>Sair</button>
        
        </div>
         :
         <div> 
          <h3>Olá visitante!! Faça login. (status false)</h3>
          <button onClick={this.entrar}>Entrar</button>  
          </div> }


        <h5>React Js - Essa parte será exibida independentemente do status</h5>
        
      </div>

    );
  }
}


export default App;

