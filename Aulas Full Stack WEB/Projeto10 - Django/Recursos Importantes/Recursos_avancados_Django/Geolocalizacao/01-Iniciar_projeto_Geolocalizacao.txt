Criar um projeto, este com nome geo.
Serão utilizados apenas ferramentas gratuitas.


---
No terminal:
pip install django geoip2 requests

######
geoip2 - Traduz o ip indicando a localidade.
requests - Busca dados do usuário.
######

django-admin startproject geo .

django-admin startapp core

-----
Criar um diretório chamado geoip.


Baixar o pacote GeoLite2
https://www.maxmind.com/en/accounts/current/geoip/downloads
GeoLite2-City  	       (tar.gz)
GeoLite2-Country    

Extrair os arquivos e pegar os que tem extenção .mmdb e colar dentro da pasta geoip.


-----
Será usado a api da yelp:
www.yelp.com

Criar uma conta e acessar no rodapé tem uma opção chamada "Programadores", vá em "Yelp Fusion"
get started

Criar um novo app e confirme o email recebido.

Quando acessar COPIAR "API key", chave de acesso ao aplicativo.

Em geo/settings.py colar a chave em

YELP_API_KEY =    '''chave do yelp'''



-------------
Configurar settings.py:



"""
Django settings for geo project.

Generated by 'django-admin startproject' using Django 2.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'yhn(j)1zmgabn+5@%j=5x(#p+^*96$806_$!z9v6+35gnws^^='

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'core',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'geo.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'geo.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'pt-br'

TIME_ZONE = 'America/Sao_Paulo'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
MEDIA_URL = '/media/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')



YELP_API_KEY = '2DAqp3he6A1MVQYFZz_z-XH6glg34WS4sNJGt0SCFJHQia4KqCmZhUXJwTAC95n11oJn_z0jQx0C1Ut6KbyQpSM-LNDwyCuke3IToSbPRRXtRlVgDWLqH-n9uA6IXXYx'

GEOIP_PATH = os.path.join(BASE_DIR, 'geoip')  # Declarado os arquivos baixados em GeoLite2 na pasta 'geoip'

LOGOUT_REDIRECT_URL = 'index'



#######################################
